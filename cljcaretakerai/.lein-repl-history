(clojure.tools.namespace.repl/refresh)
quit
(clojure.tools.namespace.repl/refresh)
(refresh)
(use 'cljcaretakerai.dbclient :reload-all)
(use 'cljcaretakerai.dbclient :reload-all)(use 'cljcaretakerai.dbclient :reload-all)
(use 'cljcaretakerai.dbclient :reload-all)
(clojure.tools.namespace.repl/refresh)
L(use 'cljcaretakerai.dbclient :reload-all)
(use 'cljcaretakerai.dbclient :reload-all)
quit
(use 'cljcaretakerai.dbclient :reload-all)
(clojure.tools.namespace.repl/refresh)
quit
(clojure.tools.namespace.repl/refresh)
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
(clojure.tools.namespace.repl )
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(use 'cljcaretakerai.aclient :reload-all)
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(use 'cljcaretakerai.core :reload-all)
quit
(use 'cljcaretakerai.dbclient :reload-all)
(use 'cljcaretakerai.core :reload-all)
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(use 'cljcaretakerai.core :reload-all)
quit
(use 'cljcaretakerai.core :reload-all)
ABx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
quit
(require '[clojure.tools.namespace.repl :refer [refresh]])
(refresh)
(use 'cljcaretakerai.core :reload-all)
quit
